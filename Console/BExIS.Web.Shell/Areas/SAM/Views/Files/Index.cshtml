@using BExIS.Modules.Sam.UI.Models
@model List<FolderModel>
<style>
    #Grid_Files .t-grid-content {
        height: auto !important;
        max-height: 475px !important;
    }
</style>
@section Information
{
    Here you are able to manage files and folders that are available to the users.
    Please click on the name in the tree structure on left to view the content of individual folders.
    <p>
        <a href="/SAM/Help/Index/#_TocXXX" class="bx-informationLink" title="go to help" target="_blank">More</a>
    </p>
}
@section LeftPane
{
    <div id="treeViewDiv">
        @Html.Partial("_FolderTree", Model)
    </div>
}
<div id="divActions" style="display:none">
    <button id="button_createFolder" type="button" class="bx-button function">Create Folder</button>
    <button id="button_uploadFile" type="button" class="bx-button function">Upload File</button>
</div><div id="content_files"></div>
@section Scripts
{
    <script src="@Url.Content("~/Scripts/2013.2.611/telerik.common.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/2013.2.611/telerik.draganddrop.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/2013.2.611/telerik.window.min.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            if ($('#window_uploadFile').length)
                $('#window_uploadFile').data('tWindow').close();
        });


        $('#button_createFolder')
            .click(function () {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("CreateFolder", "Files")',
                    data: { path: $(".bx-selected")["0"] === undefined ? '' : $(".bx-selected")["0"].children.itemValue.defaultValue },
                    dataType: 'html',
                    success: function (htmlData) {
                        var windowElement = $.telerik.window.create({
                            title: "Create Folder",
                            html: "<div id='content_createFolder' class='bx-window'>" + htmlData + "</div>",
                            contentUrl: "",
                            actions: ["Close"],
                            modal: true,
                            width: 500,
                            height: 500,
                            resizable: false,
                            draggable: true,
                            scrollable: false,
                            onClose: function () {
                                $("#window_createFolder").data('tWindow').destroy();
                                $("#grid_files .t-refresh").trigger('click');
                                $.get('@Url.Action("FolderTree", "Files", new RouteValueDictionary { { "area", "SAM" } })', null, function (response) {
                                    $("#treeViewDiv").html(response);
                                })
                            }
                        });

                        windowElement.attr('id', 'window_createFolder');
                        var window = $(windowElement).data('tWindow');
                        window.center().open();

                        resetAllTelerikIconTitles();
                    }
                });
            });

        $(document).on("click", "#button_createFolder_cancel", function () {
            $('#window_createFolder').data('tWindow').close();
        });

        function createFolder_onSuccess(data) {
            if (data.success) {
                $('#window_createFolder').data('tWindow').close();
            }
        }


        $('#button_uploadFile')
            .click(function () {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("UploadFile", "Files")',
                    data: { path: $(".bx-selected")["0"] === undefined ? '' : $(".bx-selected")["0"].children.itemValue.defaultValue },
                    dataType: 'html',
                    success: function (htmlData) {
                        var windowElement = $.telerik.window.create({
                            title: "Upload File",
                            html: "<div id='content_uploadFile' class='bx-window'>" + htmlData + "</div>",
                            contentUrl: "",
                            actions: ["Close"],
                            modal: true,
                            width: 500,
                            height: 500,
                            resizable: false,
                            draggable: true,
                            scrollable: false,
                            onClose: function () {
                                $("#window_uploadFile").data('tWindow').destroy();
                                $("#grid_files .t-refresh").trigger('click');
                            }
                        });

                        windowElement.attr('id', 'window_uploadFile');
                        var window = $(windowElement).data('tWindow');
                        window.center().open();

                        resetAllTelerikIconTitles();
                    }
                });
            });

        $(document).on("click", "#button_uploadFile_cancel", function () {
            $('#window_uploadFile').data('tWindow').close();
        });
        $(document).on("click", "#button_editFile_cancel", function () {
            $('#window_editFolder').data('tWindow').close();
        });
        function editFile_onSuccess(data) {
            if (data.success) {
                $('#window_editFolder').data('tWindow').close();
            }
        }
        function uploadFile_onSuccess(data) {
            alert(data);
            if (data.success) {
                $('#window_uploadFile').data('tWindow').close();
            }
        }

        $("#treeView_files li div")
        .click(function (e) {
            $(e.target).find(".t-in").trigger("click");
        });

        function getTreeView() {
            return $('#treeView_files').data('tTreeView');
        }

        function treeView_files_onChecked(e) {
            if (e.checked) {
                $("#divActions").show();
                $.post('@Url.Action("ProcessTick", "Files")',
                    { FeatureId: getTreeView().getItemValue(e.item) }, function () {
                        $("#grid_files .t-refresh").trigger('click');
                    });
            } else {
                $("#divActions").hide();
                $.post('@Url.Action("ProcessUntick", "Files")',
                    { FeatureId: getTreeView().getItemValue(e.item) }, function () {
                        $("#grid_files .t-refresh").trigger('click');
                    });
            }
        }

        function treeView_files_onSelect(e) {
            var path = getTreeView().getItemValue(e.item);
            var prevSelectedDiv = $(".bx-selected");

            if (prevSelectedDiv.length > 0) $(prevSelectedDiv).removeClass("bx-selected");

            var selectedDiv = $(e.item).find("div")[0];
            $(selectedDiv).addClass("bx-selected");
            $("#divActions").show();
            $('#content_files').empty();

            $.get('@Url.Action("FolderContent", "Files")', { Path: path }, function (contentData) {
                $('#content_files').html(contentData);
                truncateTitle();
            });
        }

        function grid_files_onDataBound() {
            addTooltips();
            resetAllTelerikIconTitles();

            $("input[name^='permissionType']:radio").click(function () {
                switch ($(this).data('permissiontype')) {
                    case 2:
                        $("input[name^='permissionType']:radio").attr('disabled', true);
                        $.post('@Url.Action("Delete", "Files")', { SubjectId: $(this).data('subjectid'), FeatureId: $(this).data('featureid') }, function () {
                            $("#grid_files .t-refresh").trigger('click');
                            $("input[name^='permissionType']:radio").attr('disabled', false);
                        });

                        break;
                    default:
                        $("input[name^='permissionType']:radio").attr('disabled', true);
                        $.post('@Url.Action("Create", "Files")', { SubjectId: $(this).data('subjectid'), FeatureId: $(this).data('featureid'), PermissionType: $(this).data('permissiontype') }, function () {
                            $("#grid_files .t-refresh").trigger('click');
                            $("input[name^='permissionType']:radio").attr('disabled', false);
                        });
                }
            });
            $("#grid_files span[filename]").each(function (index, element) {
                ext = Get_fontawesome($(element).attr("filename"))
                $(element).html("<i class='" + ext + "' ></i>")
            });
            $("#grid_files td[fileSize=0]").each(function (index, element) {
                size = bytesToSize($(element).html())
                $(element).html(size)
            });


        }

        function editFile(thisElement) {
            //Rename
            $.ajax({
                type: 'GET',
                url: '@Url.Action("EditFileFolder", "Files")',
                data: { path: $(thisElement).val() === undefined ? '' : $(thisElement).val() },
                dataType: 'html',
                success: function (htmlData) {
                    var windowElement = $.telerik.window.create({
                        title: "Create Folder",
                        html: "<div id='content_editFileFolder' class='bx-window'>" + htmlData + "</div>",
                        contentUrl: "",
                        actions: ["Close"],
                        modal: true,
                        width: 500,
                        height: 500,
                        resizable: false,
                        draggable: true,
                        scrollable: false,
                        onClose: function () {
                            $("#window_editFolder").data('tWindow').destroy();
                            $("#grid_files .t-refresh").trigger('click');
                            $.get('@Url.Action("FolderTree", "Files", new RouteValueDictionary { { "area", "SAM" } })', null, function (response) {
                                $("#treeViewDiv").html(response);
                            })
                        }
                    });

                    windowElement.attr('id', 'window_editFolder');
                    var window = $(windowElement).data('tWindow');
                    window.center().open();

                    resetAllTelerikIconTitles();
                }
            });
        }


        function downloadFile(thisElement) {
            window.open('@Url.Action("DownloadFile", "Files")?path=' + $(thisElement).attr("value"), '_blank');
        }
        function removeFile(thisElement) {
            var result = confirm('Are you sure you want to delete this item ' + $(thisElement).attr("value") + '?');
            if (result) {
                $.post('@Url.Action("Delete", "Files")', { path: $(thisElement).attr("value") }, function (e) {
                    if (e.error)
                        alert(e.error);

                    $("#grid_files .t-refresh").trigger('click');
                    $.get('@Url.Action("FolderTree", "Files", new RouteValueDictionary { { "area", "SAM" } })', null, function (response) {
                        $("#treeViewDiv").html(response);
                    })
                });
            }
        }
        function bytesToSize(bytes) {
            var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
            if (bytes == 0) return '0 Byte';
            var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
            return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];
        };

        function Get_fontawesome(fileName) {
            if (fileName == "FOLDER")
                return "fa fa-folder-open";
            var extension = fileName.split('.').pop();
            var relatedClass = "bx bx-file ";
            return relatedClass + extension;

        }

        // required to POST a file alongside the form in ajax mode

        //window.addEventListener("submit", function (e) {
        //    var form = e.target;
        //    if (form.getAttribute("enctype") === "multipart/form-data") {
        //        if (form.dataset.ajax) {
        //            e.preventDefault();
        //            e.stopImmediatePropagation();
        //            var xhr = new XMLHttpRequest();
        //            xhr.open(form.method, form.action);
        //            xhr.onreadystatechange = function () {
        //                if (xhr.readyState == 4 && xhr.status == 200) {
        //                    if (form.dataset.ajaxUpdate) {
        //                        var updateTarget = document.querySelector(form.dataset.ajaxUpdate);
        //                        if (updateTarget) {
        //                            updateTarget.innerHTML = xhr.responseText;
        //                        }
        //                    }
        //                }
        //            };
        //            xhr.send(new FormData(form));
        //        }
        //    }
        //}, true);

        if (typeof window.FormData === 'undefined') {
            alert("This browser doesn't support HTML5 file uploads!");
        }
        window.addEventListener("submit", function (e) {
            var form = e.target;
            if (form.getAttribute("enctype") === "multipart/form-data") {
                if (form.dataset.ajax) {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    var xhr = new XMLHttpRequest();
                    xhr.open(form.method, form.action);
                    xhr.setRequestHeader("x-Requested-With", "XMLHttpRequest"); // this allows 'Request.IsAjaxRequest()' to work in the controller code
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {
                            var returnedData; //this variable needs to be named the same as the parameter in the function call specified for the AjaxOptions.OnSuccess
                            try {
                                data = JSON.parse(xhr.responseText); //I also want my returned data to be parsed if it is a JSON object
                            } catch (e) {
                                data = xhr.responseText;
                            }
                            if (form.dataset.ajaxSuccess) {
                                eval(form.dataset.ajaxSuccess); //converts function text to real function and executes (not very safe though)
                            }
                            else if (form.dataset.ajaxFailure) {
                                eval(form.dataset.ajaxFailure);
                            }
                            if (form.dataset.ajaxUpdate) {
                                var updateTarget = document.querySelector(form.dataset.ajaxUpdate);
                                if (updateTarget) {
                                    updateTarget.innerHTML = data;
                                }
                            }
                        }
                    };
                    xhr.send(new FormData(form));
                }
            }
        }, true);
    </script>
}