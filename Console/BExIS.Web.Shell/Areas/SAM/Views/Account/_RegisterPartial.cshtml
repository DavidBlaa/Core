@using Telerik.Web.Mvc.UI
@model BExIS.Web.Shell.Areas.SAM.Models.AccountRegisterModel

@using (Ajax.BeginForm("Register", "Account", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "Content_Register", OnSuccess = "onSuccess" }))
{
    @Html.ValidationSummary(true)

    <table class="bx-table-form">
        <tr>
            <td>
                @Html.Label("Authentication Provider")
            </td>
            <td>
                @(Html.Telerik().DropDownListFor(m => m.AuthenticatorList.Id)
                    .HtmlAttributes(new { style = "width:372px; padding-left: 2px;", @class = "t-input bx-input" })
                    .DropDownHtmlAttributes(new { style = "width:auto;", @class = "t-input bx-input" })
                      .BindTo(new SelectList(Model.AuthenticatorList.AuthenticatorList, "Id", "Name")))
                @Html.ValidationMessageFor(m => m.AuthenticatorList.Id)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.Username)
            </td>
            <td>
                @Html.TextBoxFor(m => m.Username, new { @class = "t-input bx-input" })
                @Html.ValidationMessageFor(m => m.Username)
                
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.Password)
            </td>
            <td>
                @Html.PasswordFor(m => m.Password, new { @class = "t-input bx-input" })
                @Html.ValidationMessageFor(m => m.Password)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.ConfirmPassword)
            </td>
            <td>
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "t-input bx-input" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.FullName)
            </td>
            <td>
                @Html.TextBoxFor(m => m.FullName, new { @class = "t-input bx-input" })
                @Html.ValidationMessageFor(m => m.FullName)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.Email)
            </td>
            <td>
                @Html.TextBoxFor(m => m.Email, new { @class = "t-input bx-input" })
                @Html.ValidationMessageFor(m => m.Email)
            </td>
        </tr>
        <tr>
            <td>
                @Html.Label("Security Question")
            </td>
            <td>
                @(Html.Telerik().DropDownListFor(m => m.SecurityQuestion)
                    .Placeholder("--- SELECT ---")
                    .HtmlAttributes(new { style = "width:372px; padding-left: 2px;", @class = "t-input bx-input" })
                    .DropDownHtmlAttributes(new { style = "width:auto;" })
                    .BindTo(new SelectList(Model.SecurityQuestionList.SecurityQuestionList, "Id", "Question")))
                @Html.ValidationMessageFor(m => m.SecurityQuestion)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.SecurityAnswer)
            </td>
            <td>
                @Html.TextBoxFor(m => m.SecurityAnswer, new {@class = "t-input bx-input"})
                @Html.ValidationMessageFor(m => m.SecurityAnswer)
            </td>
        </tr>
        <tr>
            <td colspan="2">
                @Html.CheckBoxFor(m => m.TermsAndConditions)
                I accept 
                <a href="/Site/Terms/Index" title="See Terms and Conditions" target="_blank">Terms and Conditions</a>.
                @Html.ValidationMessageFor(m => m.TermsAndConditions)
            </td>
        </tr>
    </table>

    <div class="bx-footer right">
        <button type="reset" style="float:left" class="bx-button action" onclick="$(this).resetValidation()">Reset</button>
        <button type="submit" class="bx-button action">Create</button>
        <button type="button" class="bx-button action" onclick="Window_Register_Cancel()">Cancel</button>
    </div>
}

<script type="text/javascript">
    $(document)
        .ready(function() {
            $.validator.unobtrusive.parse("#Content_Register");
            resetAllTelerikIconTitles();
        });

    function onSuccess(data) {
        if (data.success) {
            $('#Content_Register').empty();
            $('#Window_Register').data('tWindow').close();
            window.top.location = "/Home/Index";
        }
    }

    function onReset() {
        console.log("start reset");
        $("#Content_Register input").clearErrors();
    }

    $.fn.resetValidation = function () {

        var $form = this.closest('form');

        //reset jQuery Validate's internals
        $form.validate().resetForm();

        //reset unobtrusive validation summary, if it exists
        $form.find("[data-valmsg-summary=true]")
            .removeClass("validation-summary-errors")
            .addClass("validation-summary-valid")
            .find("ul").empty();

        //reset unobtrusive field level, if it exists
        $form.find("[data-valmsg-replace]")
            .removeClass("field-validation-error")
            .addClass("field-validation-valid")
            .empty();

        return $form;
    };
</script>