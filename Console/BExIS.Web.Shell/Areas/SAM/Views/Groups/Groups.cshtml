@using BExIS.Web.Shell.Areas.SAM.Models
@using Telerik.Web.Mvc.UI
@model System.Collections.Generic.List<GroupGridRowModel>

<style>
    .t-window-content
    {
        height: auto !important;
        width: auto !important;
    }

    #gridMembership
    {
        width: 768px !important;
    }
</style>

@section Information
{
    With this interface you are able to manage groups. New groups can be added with the "Create" button. Existing groups can be edited (properties, members, delete) using the "Edit" button.
    <p>
    <a href="/SAM/Help/Index/#_Toc451422047" class="bx-informationLink" title="go to help" target="_blank">More</a>
    </p>
}

<button type="button" class="bx-button function" onclick="groupCreate_onClick()">Create Group</button>

@(Html.Telerik().Grid<GroupGridRowModel>()
    .Name("gridGroups")
    .Columns(columns =>
    {
        columns.Bound(g => g.Id);
        columns.Bound(g => g.GroupName);
        columns.Bound(g => g.Description);
        columns.Template(@<text>
            <button type="button" class="bx bx-grid-function bx-edit" onclick="groupEdit_onClick('@item.GroupName', @item.Id);"></button>
            <button type="button" class="bx bx-grid-function bx-trash" onclick="groupDelete_onClick('@item.GroupName', @item.Id)"></button>
        </text>)
            .ClientTemplate("<button type=\"button\" class=\"bx bx-grid-function bx-edit\" onclick=\"groupEdit_onClick(\'<#= GroupName #>\', <#= Id #>);\" value=\"<#= Id #>\"></button>" +
                            "<button type=\"button\" class=\"bx bx-grid-function bx-trash\" onclick=\"groupDelete_onClick(\'<#= GroupName #>\', <#= Id #>);\" value=\"<#= Id #>\"></button>")
            .Width(70);
    })
    .ClientEvents(clientEvents =>
    {
        clientEvents.OnDataBound("gridGroups_onDataBound");
    })
    .DataBinding(dataBinding => dataBinding
        .Ajax()
        .OperationMode(GridOperationMode.Client)
        .Select("Groups_Select", "Groups")
    )
    .Filterable()
    .Pageable(pageable =>
    {
        pageable.PageSize(10, new[] {10, 20, 50, 100});
        pageable.Style(GridPagerStyles.NextPreviousAndNumeric | GridPagerStyles.PageSizeDropDown);
        pageable.Position(GridPagerPosition.Both);
    })
    .Sortable())

<script type="text/javascript">

    function gridGroups_onDataBound() {
        resetAllTelerikIconTitles();
        addTooltips();
    }

    // --------------------------------------------------
    // CREATE
    // --------------------------------------------------

    function groupCreate_onClick() {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("Create", "Groups")',
            dataType: 'html',
            success: function (htmlData) {
                var windowElement = $.telerik.window.create({
                    title: "Create Group",
                    html: "<div id='contentCreate' class='bx-window'>" + htmlData + "</div>",
                    contentUrl: "",
                    actions: ["Close"],
                    modal: true,
                    width: 500,
                    height: 500,
                    resizable: false,
                    draggable: true,
                    scrollable: false,
                    onClose: function () {
                        $("#windowCreate").data('tWindow').destroy();
                        $("#gridGroups .t-refresh").trigger('click');
                    }
                });

                windowElement.attr('id', 'windowCreate');
                var window = $(windowElement).data('tWindow');
                window.center().open();

                resetAllTelerikIconTitles();
            }
        });
    }

    function groupCreate_onSuccess(data) {
        if (data.success) {
            $('#windowCreate').data('tWindow').close();
        }
    }

    function windowCreate_onCancel() {
        $('#windowCreate').data('tWindow').close();
    }

    // --------------------------------------------------
    // EDIT
    // --------------------------------------------------

    function groupEdit_onClick(groupName, id) {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("Edit", "Groups")',
            data: { Id:id },
            dataType: 'html',
            success: function (htmlData) {
                var windowElement = $.telerik.window.create({
                    title: "Edit Group: " + groupName + " (Id: " + id + ")",
                    html: "<div id='contentEdit' class='bx-window'>" + htmlData + "</div>",
                    contentUrl: "",
                    actions: ["Close"],
                    modal: true,
                    width: 500,
                    height: 500,
                    resizable: false,
                    draggable: true,
                    scrollable: false,
                    onClose: function () {
                        $("#windowEdit").data('tWindow').destroy();
                        $("#gridGroups .t-refresh").trigger('click');
                    }
                });

                windowElement.attr('id', 'windowEdit');
                var window = $(windowElement).data('tWindow');
                window.center().open();

                resetAllTelerikIconTitles();
            }
        });
    }

    function groupEdit_onSuccess(data) {
        if (data.success) {
            $('#windowEdit').data('tWindow').close();
        }
    }

    function gridMembership_onDataBound() {
        resetAllTelerikIconTitles();
        addTooltips();
    }

    function windowEdit_onCancel() {
        $('#windowEdit').data('tWindow').close();
    }

    function windowEdit_onSubmit() {
        $.post('@Url.Action("SetMembership", "Groups")', { Users: $("#gridMembership").data("tGrid").dataSource._data });
    }

    function setMembership(value, id) {

        var rows = $("#gridMembership").data("tGrid").data;

        for (var i = 0; i < rows.length; ++i) {
            if (rows[i].Id == id) {
                rows[i].IsUserInGroup = value;
            }
        }
    }

    function groupDelete_onClick(groupName, id) {
        var result = confirm('Are you sure you want to delete this user (Group Name:' + groupName + ', Id:' + id + ')?');

        if (result) {
            $.post('@Url.Action("Delete", "Groups")', { Id: id }, function (e) {
                $("#gridGroups .t-refresh").trigger('click');
            });
        }
    }
</script>