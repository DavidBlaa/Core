@using BExIS.Web.Shell.Areas.SAM.Models
@using Telerik.Web.Mvc.UI
@model System.Collections.Generic.List<BExIS.Web.Shell.Areas.SAM.Models.UserGridRowModel>

<style>
    .t-window-content
    {
        height: auto !important;
        width: auto !important;
    }

    #gridMembership
    {
        width: 768px !important;
    }
</style>



@section Information
{
    With this interface you are able to manage users. New users can be added with the "Create" button. Existing users can be edited (properties, memberships, delete) through the "Edit" button.
    <p>
    <a href="/SAM/Help/Index/#_Toc451422044" class="bx-informationLink" title="go to help" target="_blank">More</a>
    </p>
}

<button type="button" class="bx-button function" onclick="userCreate_onClick()">Create User</button>

    @(Html.Telerik().Grid<UserGridRowModel>()
    .Name("gridUsers")
    .Columns(columns =>
    {
        columns.Bound(u => u.Id);
        columns.Bound(u => u.Username);
        columns.Bound(u => u.FullName);
        columns.Bound(u => u.Email);
        columns.Bound(u => u.IsApproved);
        columns.Bound(u => u.IsBlocked);
        columns.Bound(u => u.IsLockedOut);
        columns.Template(@<text>
            <button type="button" class="bx bx-grid-function bx-edit" onclick="userEdit_onClick('@item.Username', @item.Id)"></button>
            <button type="button" class="bx bx-grid-function bx-trash" onclick="userDelete_onClick('@item.Username', @item.Id)"></button>
        </text>)
            .ClientTemplate("<button type=\"button\" class=\"bx bx-grid-function bx-edit\" onclick=\"userEdit_onClick(\'<#= Username #>\', <#= Id #>);\" value=\"<#= Id #>\"></button>" +
                            "<button type=\"button\" class=\"bx bx-grid-function bx-trash\" onclick=\"userDelete_onClick(\'<#= Username #>\', <#= Id #>);\" value=\"<#= Id #>\"></button>")
            .Width(70);
    })
        .ClientEvents(clientEvents =>
        {
            clientEvents.OnDataBound("gridUsers_onDataBound");
        })
        .DataBinding(dataBinding => dataBinding
            .Ajax()
            .OperationMode(GridOperationMode.Client)
            .Select("Users_Select", "Users")
        )
        .Filterable()
        .Pageable(pageable =>
        {
            pageable.PageSize(10, new[] { 10, 20, 50, 100 });
            pageable.Style(GridPagerStyles.NextPreviousAndNumeric | GridPagerStyles.PageSizeDropDown);
            pageable.Position(GridPagerPosition.Both);
        })
        .Sortable())

<script type="text/javascript">

    function gridUsers_onDataBound() {
        resetAllTelerikIconTitles();
        addTooltips();
    }

    // --------------------------------------------------
    // CREATE
    // --------------------------------------------------

    function userCreate_onClick() {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("Create", "Users")',
            dataType: 'html',
            success: function (htmlData) {
                var windowElement = $.telerik.window.create({
                    title: "Create User",
                    html: "<div id='contentCreate' class='bx-window'>" + htmlData + "</div>",
                    contentUrl: "",
                    actions: ["Close"],
                    modal: true,
                    width: 500,
                    height: 500,
                    resizable: false,
                    draggable: true,
                    scrollable: false,
                    onClose: function () {
                        $("#windowCreate").data('tWindow').destroy();
                        $("#gridUsers .t-refresh").trigger('click');
                    }
                });

                windowElement.attr('id', 'windowCreate');
                var window = $(windowElement).data('tWindow');
                window.center().open();

                resetAllTelerikIconTitles();
            }
        });
    }

    function userCreate_onSuccess(data) {
        if (data.success) {
            $('#windowCreate').data('tWindow').close();
        }
    }

    function windowCreate_onCancel() {
        $('#windowCreate').data('tWindow').close();
    }

    // --------------------------------------------------
    // EDIT
    // --------------------------------------------------

    function userEdit_onClick(username, id) {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("Edit", "Users")',
            data: { Id:id },
            dataType: 'html',
            success: function (htmlData) {
                var windowElement = $.telerik.window.create({
                    title: "Edit User: " + username + " (Id: " + id + ")",
                    html: "<div id='contentEdit' class='bx-window'>" + htmlData + "</div>",
                    contentUrl: "",
                    actions: ["Close"],
                    modal: true,
                    width: 500,
                    height: 500,
                    resizable: false,
                    draggable: true,
                    scrollable: false,
                    onClose: function () {
                        $("#windowEdit").data('tWindow').destroy();
                        $("#gridUsers .t-refresh").trigger('click');
                    }
                });

                windowElement.attr('id', 'windowEdit');
                var window = $(windowElement).data('tWindow');
                window.center().open();

                resetAllTelerikIconTitles();
            }
        });
    }

    function userEdit_onSuccess(data) {
        if (data.success) {
            $('#windowEdit').data('tWindow').close();
        }
    }

    function gridMembership_onDataBound() {
        resetAllTelerikIconTitles();
        addTooltips();
    }

    function windowEdit_onCancel() {
        $('#windowEdit').data('tWindow').close();
    }

    function windowEdit_onSubmit() {
        $.post('@Url.Action("SetMembership", "Users")', { Groups: $("#gridMembership").data("tGrid").dataSource._data });
    }

    function setMembership(value, id) {

        var rows = $("#gridMembership").data("tGrid").data;

        for (var i = 0; i < rows.length; ++i) {
            if (rows[i].Id == id) {
                rows[i].IsUserInGroup = value;
            }
        }
    }

    function userDelete_onClick(username, id) {
        var result = confirm('Are you sure you want to delete this user (Username:' + username + ', Id:' + id + ')?');

        if (result) {
            $.post('@Url.Action("Delete", "Users")', { Id: id }, function (e) {
                $("#gridUsers .t-refresh").trigger('click');
            });
        }
    }
</script>