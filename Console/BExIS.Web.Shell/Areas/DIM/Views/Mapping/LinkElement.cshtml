
@using BExIS.Modules.Dim.UI.Models.Mapping
@model LinkElementModel

@{
    string id = /*Model.Type +*/ "_"+Model.ElementId+"_"+ @Model.Position+"_"+@Model.Name;
    string c = "le-simple-" + @Model.Position;
}



<div id="@id" class="le-simple @id @c" title="@Model.Description" >

    <div class="le-simple-info" style="display: none">
        <div id="Id">@Model.Id</div>
        <div id="Name">@Model.Name</div>
        <div id="ElementId">@Model.ElementId</div>
        <div id="Type">@Model.Type</div>
        <div id="Position">@Model.Position</div>
        <div id="Complexity">@Model.Complexity</div>
        <div id="XPath">@Model.XPath</div>
    </div>

   

    <table>
        <tr>
            @if (Model.Position.Equals(LinkElementPostion.Source))
            {
                <td class="le-simple-header-td">
                    <div class="le-simple-header">
                        @Model.Name
                    </div>
                    <div class="le-simple-path" value="@Model.XPath">
                        @Model.XPath.Replace("/", "/ ")
                    </div>
                </td>
                <td class="le-simple-selector-container">
                    <span class="bx bx-next bx-button function small le-simple-selector" onclick="leSimpleSelectorClick(this)"></span>
                </td>
            }
            else
            {
                <td class="le-simple-selector-container">
                    <span class="bx bx-previous bx-button function small le-simple-selector" onclick="leSimpleSelectorClick(this)"></span>
                </td>
                <td class="le-simple-header-td">
                    <div class="le-simple-header">
                        @Model.Name
                    </div>
                    <div class="le-simple-path" value="@Model.XPath">
                        @Model.XPath.Replace("/", "/ ")
                    </div>
                </td>
            }
        </tr>
    </table>
 
   
</div>
